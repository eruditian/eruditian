import{d as e,f as t,r as n}from"./index-D9u71Snz.js";var r=n(`refresh-ccw`,[[`path`,{d:`M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8`,key:`14sxne`}],[`path`,{d:`M3 3v5h5`,key:`1xhq8a`}],[`path`,{d:`M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16`,key:`1hlbsb`}],[`path`,{d:`M16 16h5v5`,key:`ccwih5`}]]),i=e=>{let t,n=new Set,r=(e,r)=>{let i=typeof e==`function`?e(t):e;if(!Object.is(i,t)){let e=t;t=r??(typeof i!=`object`||!i)?i:Object.assign({},t,i),n.forEach(n=>n(t,e))}},i=()=>t,a={setState:r,getState:i,getInitialState:()=>o,subscribe:e=>(n.add(e),()=>n.delete(e))},o=t=e(r,i,a);return a},a=(e=>e?i(e):i),o=t(e(),1),s=e=>e;function c(e,t=s){let n=o.useSyncExternalStore(e.subscribe,o.useCallback(()=>t(e.getState()),[e,t]),o.useCallback(()=>t(e.getInitialState()),[e,t]));return o.useDebugValue(n),n}var l=e=>{let t=a(e),n=e=>c(t,e);return Object.assign(n,t),n},u=(e=>e?l(e):l),d=new Map,f=e=>{let t=d.get(e);return t?Object.fromEntries(Object.entries(t.stores).map(([e,t])=>[e,t.getState()])):{}},p=(e,t,n)=>{if(e===void 0)return{type:`untracked`,connection:t.connect(n)};let r=d.get(n.name);if(r)return{type:`tracked`,store:e,...r};let i={connection:t.connect(n),stores:{}};return d.set(n.name,i),{type:`tracked`,store:e,...i}},m=(e,t)=>{if(t===void 0)return;let n=d.get(e);n&&(delete n.stores[t],Object.keys(n.stores).length===0&&d.delete(e))},h=e=>{if(!e)return;let t=e.split(`
`),n=t.findIndex(e=>e.includes(`api.setState`));if(n<0)return;let r=t[n+1]?.trim()||``;return/.+ (.+) .+/.exec(r)?.[1]},g=(e,t={})=>(n,r,i)=>{let{enabled:a,anonymousActionType:o,store:s,...c}=t,l;try{l=(a??!1)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch{}if(!l)return e(n,r,i);let{connection:u,...d}=p(s,l,c),g=!0;i.setState=((e,t,a)=>{let l=n(e,t);if(!g)return l;let d=a===void 0?{type:o||h(Error().stack)||`anonymous`}:typeof a==`string`?{type:a}:a;return s===void 0?(u?.send(d,r()),l):(u?.send({...d,type:`${s}/${d.type}`},{...f(c.name),[s]:i.getState()}),l)}),i.devtools={cleanup:()=>{u&&typeof u.unsubscribe==`function`&&u.unsubscribe(),m(c.name,s)}};let v=(...e)=>{let t=g;g=!1,n(...e),g=t},y=e(i.setState,r,i);if(d.type===`untracked`?u?.init(y):(d.stores[d.store]=i,u?.init(Object.fromEntries(Object.entries(d.stores).map(([e,t])=>[e,e===d.store?y:t.getState()])))),i.dispatchFromDevtools&&typeof i.dispatch==`function`){let e=i.dispatch;i.dispatch=(...t)=>{e(...t)}}return u.subscribe(e=>{switch(e.type){case`ACTION`:if(typeof e.payload!=`string`){console.error(`[zustand devtools middleware] Unsupported action format`);return}return _(e.payload,e=>{if(e.type===`__setState`){if(s===void 0){v(e.state);return}Object.keys(e.state).length!==1&&console.error(`
                    [zustand devtools middleware] Unsupported __setState action format.
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);let t=e.state[s];if(t==null)return;JSON.stringify(i.getState())!==JSON.stringify(t)&&v(t);return}i.dispatchFromDevtools&&typeof i.dispatch==`function`&&i.dispatch(e)});case`DISPATCH`:switch(e.payload.type){case`RESET`:return v(y),s===void 0?u?.init(i.getState()):u?.init(f(c.name));case`COMMIT`:if(s===void 0){u?.init(i.getState());return}return u?.init(f(c.name));case`ROLLBACK`:return _(e.state,e=>{if(s===void 0){v(e),u?.init(i.getState());return}v(e[s]),u?.init(f(c.name))});case`JUMP_TO_STATE`:case`JUMP_TO_ACTION`:return _(e.state,e=>{if(s===void 0){v(e);return}JSON.stringify(i.getState())!==JSON.stringify(e[s])&&v(e[s])});case`IMPORT_STATE`:{let{nextLiftedState:t}=e.payload,n=t.computedStates.slice(-1)[0]?.state;if(!n)return;v(s===void 0?n:n[s]),u?.send(null,t);return}case`PAUSE_RECORDING`:return g=!g}return}}),y},_=(e,t)=>{let n;try{n=JSON.parse(e)}catch(e){console.error(`[zustand devtools middleware] Could not parse the received json`,e)}n!==void 0&&t(n)};export{u as n,r,g as t};